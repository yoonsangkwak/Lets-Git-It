plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 23
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path : ':domain')

    // Coroutine
    def coroutine_version = '1.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // hilt
    def hilt_version = '2.40.5'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    // Okhttp
    def okhttp_version = '4.9.3'
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$okhttp_version"))
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    // Hawk
    def hawk_version = '2.0.1'
    implementation "com.orhanobut:hawk:$hawk_version"

    // Logger
    def logger_version = '2.2.0'
    implementation "com.orhanobut:logger:$logger_version"
}